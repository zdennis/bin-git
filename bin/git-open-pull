#!/usr/bin/env ruby

require 'json'

if %x{which gh}.empty?
  puts <<~MESSAGE
    The gh command is not found. Possible installation methods:

        # via homebrew
        brew install gh

    More more installation options see https://cli.github.com/
  MESSAGE
  exit 1
end

ARGV_PROVIDED_SHA_OR_REF = ARGV.shift
SHA_OR_REF = ARGV_PROVIDED_SHA_OR_REF || %x{git sha}.chomp

if SHA_OR_REF =~ /^\d+$/
  # when SHA_OR_REF is a PR number itself
  open %x{git pull-url $SHA_OR_REF}
else
  repos = %x{git config remote.origin.url}.scan(/github.com[:\/](.*)/).flatten.first.to_s.sub('.git', '')
  if repos.empty?
    puts "The origin url could not be extracted running %x{git config remote.origin.url}"
    exit 1
  end

  repo_info_json = JSON.parse(%x{gh repo view --json name,nameWithOwner})
  repo_name = repo_info_json.fetch("name")
  repo_name_with_owner = repo_info_json.fetch("nameWithOwner")
  base_branch = %x{git get-main-branch}.chomp

  if ARGV_PROVIDED_SHA_OR_REF
    json_response = %x{gh api repos/#{repo_name_with_owner}/commits/#{SHA_OR_REF}/pulls}
    response_data = JSON.parse(json_response)

    if response_data.is_a?(Hash) && response_data['message'] =~ /no commit found/i
      puts response_data['message']
      exit 1
    end
  else
    org_name = %x{git github-org-name}.chomp
    branch_name = %x{git rev-parse --abbrev-ref HEAD}.chomp
    current_branch = %x{git current-branch}

    template = ".github/PULL_REQUEST_TEMPLATE.md"

    command = %|gh pr create --web --base="#{base_branch}" --head="#{current_branch}"|

    # template option broken? 2025-01-15
    # however, if it is omitted then the template works when opening the PR
    # command << " --template #{File.basename(template)}" if File.exist?(template)
    system command
  end
end
